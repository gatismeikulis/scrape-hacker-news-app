version: "3.9"

services:
  frontend:
    build: ./frontend
    ports:
      - "5173:5173" # Vite dev server port
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevent overwriting node_modules
    depends_on:
      - backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5000/api}

  backend:
    build: ./backend
    ports:
      - "5000:5000" # container port:host port
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - FLASK_RUN_HOST=0.0.0.0 # makes flask reachable from the host
      - FLASK_RUN_PORT=5000 # makes flask listen this port
      - FLASK_APP=app.main:app
      - DATABASE_URL=postgresql+psycopg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-scrape_hn}
    volumes:
      - ./backend:/app
    command: flask run
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16
    container_name: scrape_hn_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_DB: ${POSTGRES_DB:-scrape_hn}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
